{"version":3,"sources":["sidebar/Sidebar.js","application/Card.js","application/CardModal.js","application/ApplicationPage.js","search/SearchCard.js","search/SearchPage.js","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","className","onClick","props","switchPage","Component","date","class","state","wordOfDate","Card","showEditModal","e","stopPropagation","dateType","find","d","application","status","this","jobTitle","companyName","id","CardEdit","closeEditModal","deleteApplication","submitFunc","event","setState","target","value","console","log","function_btn","mode","type","submitAction","bind","Modal","show","onHide","Header","closeButton","Title","Body","htmlFor","onChange","handleChange","Footer","deleteAction","CardBoard","applications","card_titles","card_class","showModal","getData","groupApplication","createCardTitle","createCardClass","$","ajax","url","method","done","data","JSON","parse","result","cardTitles","cardClass","newApplications","cardTitle","async","stringify","contentType","success","msg","complete","push","responseJSON","updatedApp","idx","findIndex","a","renderPage","indexOf","splice","modalMode","applicationsGroup","reduce","pv","v","appClass","title","card","forEach","app","applicationModal","updateCardBoard","SearchCard","handleCloseEditModal","functionBtn","columns","label","SearchPage","searchText","rows","salary","addedList","keywords","res","map","i","location","window","alert","newRows","filter","newAddedList","job","addToWaitlist","deleteTheApplication","placeholder","style","padding","name","setSalary","search","column","row","addButton","includes","removeFromWaitlist","backgroundColor","App","mapRouter","currentPage","pageName","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01585e95.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '@fortawesome/fontawesome-free/js/fontawesome';\nimport '@fortawesome/fontawesome-free/css/fontawesome.css';\nimport '@fortawesome/fontawesome-free/js/solid';\nimport '@fortawesome/fontawesome-free/js/regular';\nimport '@fortawesome/fontawesome-free/js/brands';\n\nimport '../static/Sidebar.css'\nexport default class Sidebar extends Component {\n    render() {\n        return (\n            <div className=\"left-nav\">\n                <div className=\"left-nav-item\">\n                    <div onClick={() => this.props.switchPage('ApplicationPage')}>\n                        <i className=\"fas fa-columns left-nav-icon\" ></i>\n                    </div>\n                    <div onClick={() => this.props.switchPage('SearchPage')}>\n                        <i className=\"fas fa-search left-nav-icon\"></i>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nlet date = [\n    {\n        class: \"1\",\n        state: \"Wish list\",\n        wordOfDate: \"Apply By\"\n    }, {\n        class: \"2\",\n        state: \"Waiting for referral\",\n        wordOfDate: \"Referral before \"\n    }, {\n        class: \"3\",\n        state: \"Applied\",\n        wordOfDate: \"Applied Date\"\n    }, {\n        class: \"4\",\n        state: \"Rejected\",\n        wordOfDate: \"Applied Date\"\n    }\n]\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showEditModal: props.showEditModal\n        }\n\n    }\n\n    stopPropagation(e){\n        e.stopPropagation()\n    }\n\n    render() {\n        let dateType = date.find(d =>{\n            return d.class === this.props.application.status\n        })\n        return (\n            <div className=\"card card-col\" key={this.state.id+\"_card\"}  onClick={this.state.showEditModal}>\n                <div className=\"card-body\">\n                    <div className=\"card-action\">\n                        <h6 className=\"card-title\"  onClick={this.stopPropagation}>\n                            {this.props.application.jobTitle}\n                        </h6>\n                    </div>\n                    <p className=\"small-content-text\" key={this.props.application.companyName}>\n                        {this.props.application.companyName}<br/>\n                        {dateType.wordOfDate}: {this.props.application.date}\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport { Modal } from 'react-bootstrap';\nexport default class CardEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            closeEditModal: props.closeEditModal,\n            deleteApplication: props.deleteApplication,\n            submitFunc: props.submitFunc,\n            id: props.application.id,\n            jobTitle: props.application.jobTitle,\n            companyName: props.application.companyName,\n            date: props.application.date,\n            class: props.application.status\n        }\n    }\n\n    // set data to state automatically corresponding to the attribute 'id' of input field\n    // ex: <input id = 'date'> => setState({date: value})\n    handleChange(event){\n\t\tthis.setState({ [event.target.id]: event.target.value });\n\t}\n\n    submitAction(){\n        console.log('hit!')\n        this.state.closeEditModal()\n        let application = {\n            id: this.state.id,\n            companyName: this.state.companyName,\n            jobTitle: this.state.jobTitle,\n            date: this.state.date,\n            status: this.state.class\n        }\n        console.log(application)\n        // call parent function to handle data change\n        this.state.submitFunc(application)\n\n    }\n\n    deleteAction(){\n        this.state.closeEditModal()\n        let application = {\n            id: this.state.id,\n            companyName: this.state.companyName,\n            jobTitle: this.state.jobTitle,\n            date: this.state.date,\n            status: this.state.class\n        }\n        this.state.deleteApplication(application)\n    }\n\n    render() {\n\n        let function_btn = null\n        if (this.props.mode === 'update') {\n            function_btn = <button type=\"button\" className=\"btn btn-success\" onClick={this.submitAction.bind(this)}>\n                Update\n            </button>\n        }else{\n            function_btn = <button type=\"button\" className=\"btn btn-success\" onClick={this.submitAction.bind(this)}>\n                Create\n            </button>\n        }\n\n        let view = !this.props.application ? <div /> : <div>\n            <Modal show={this.props.show} onHide={this.state.closeEditModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        {this.props.application.companyName}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"companyName\" className=\"col-form-label\">Company Name</label>\n                        <input type=\"text\" className=\"form-control\" id=\"companyName\" value={this.state.companyName} onChange={this.handleChange.bind(this)}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"job_title\" className=\"col-form-label\">Job Title</label>\n                        <input type=\"text\" className=\"form-control\" id=\"jobTitle\" value={this.state.jobTitle} onChange={this.handleChange.bind(this)}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"date\" className=\"col-form-label\">Date</label>\n                        <input type=\"date\" className=\"form-control\" id=\"date\" value={this.state.date} onChange={this.handleChange.bind(this)}/>\n                    </div>\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <label className=\"input-group-text\" htmlFor=\"class\">Application Type</label>\n                        </div>\n                        <select className=\"custom-select\" id=\"class\" value={this.state.class} onChange={this.handleChange.bind(this)}>\n                            <option >Choose...</option>\n                            <option value=\"1\">Wish list</option>\n                            <option value=\"2\">Waiting Referral</option>\n                            <option value=\"3\">Applied</option>\n                            <option value=\"4\">Rejected</option>\n                        </select>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button type=\"button\" className=\"btn btn-danger mr-auto\" onClick={this.deleteAction.bind(this)}>\n                        Delete\n                    </button>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.state.closeEditModal}>\n                        Close\n                    </button>\n                    {function_btn}\n                </Modal.Footer>\n            </Modal>\n        </div >\n        return view\n    }\n}","import React, { Component } from 'react'\nimport Card from './Card'\nimport CardModal from './CardModal'\nimport $ from 'jquery'\n\nexport default class CardBoard extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      applications: [],\n      card_titles: [],\n      card_class: [],\n      showModal: false\n    }\n    this.getData = this.getData.bind(this)\n    this.groupApplication = this.groupApplication.bind(this)\n    this.createCardTitle = this.createCardTitle.bind(this)\n    this.createCardClass = this.createCardClass.bind(this)\n  }\n\n  // get initial data to render the root page\n  getData () {\n    return $.ajax({\n      url: 'http://localhost:5000/application',\n      method: 'GET'\n    })\n  }\n\n  componentDidMount () {\n    // fetch the data only after this component is mounted\n    this.getData()\n      .done((data) => {\n        data = JSON.parse(data)\n        // console.log(data);\n        const result = this.groupApplication(data)\n        const cardTitles = this.createCardTitle(result)\n        const cardClass = this.createCardClass(result)\n        this.setState({\n          applications: data,\n          card_titles: cardTitles,\n          card_class: cardClass\n        })\n      })\n  }\n\n  renderPage (newApplications) {\n    // helper function to render the page\n    // rerender the page to represent the update result\n    const result = this.groupApplication(newApplications)\n    const cardTitle = this.createCardTitle(result)\n    const cardClass = this.createCardClass(result)\n\n    this.setState({\n      applications: newApplications,\n      card_titles: cardTitle,\n      card_class: cardClass,\n      showModal: false,\n      application: null\n    })\n  }\n\n  // the update function for child component\n  updateCardBoard (application) {\n    const newApplications = this.state.applications\n    if (application.id == null) {\n      // current application is a new application, create a new one and save in the backend.\n      console.log('new application')\n      $.ajax({\n        url: 'http://localhost:5000/application', // TODO: will have to replace with production URL\n        method: 'POST',\n        async: false,\n        data: JSON.stringify({\n          application: application\n        }),\n        contentType: 'application/json',\n        success: (msg) => {\n          console.log(msg)\n        },\n        complete: function (data) {\n          newApplications.push(data.responseJSON)\n        }\n      })\n    } else {\n      console.log('updating id=' + application.id)\n      $.ajax({\n        url: 'http://localhost:5000/application',\n        method: 'PUT',\n        async: false,\n        data: JSON.stringify({\n          application: application\n        }),\n        contentType: 'application/json',\n        success: (msg) => {\n          console.log(msg)\n        },\n        complete: function (data) {\n          const updatedApp = data.responseJSON\n          const idx = newApplications.findIndex(a => a.id === updatedApp.id)\n          newApplications[idx] = updatedApp\n        }\n      })\n    }\n    this.renderPage(newApplications)\n  }\n\n  deleteApplication (application) {\n    const newApplications = this.state.applications\n    console.log('deleting id=' + application.id)\n    $.ajax({\n      url: 'http://localhost:5000/application',\n      method: 'DELETE',\n      async: false,\n      data: JSON.stringify({\n        application: application\n      }),\n      contentType: 'application/json',\n      success: (msg) => {\n        console.log(msg)\n      },\n      complete: function (data) {\n        const idx = newApplications.indexOf(data.responseJSON)\n        newApplications.splice(idx, 1)\n      }\n    })\n    this.renderPage(newApplications)\n  }\n\n  // open the card modal according to the application in parameter\n  showEditModal (application, mode) {\n    const modalMode = mode\n\n    this.setState({\n      showModal: true,\n      application: application,\n      modalMode: modalMode\n    })\n  }\n\n  closeEditModal () {\n    this.setState({\n      showModal: false,\n      application: null\n    })\n  }\n\n  // create all cards(application) and make cards having the same class in the same column\n  createCardClass (applicationsGroup) {\n    return applicationsGroup.reduce((pv, v) => {\n      const appClass = (\n        <div className='col' key={v.title + '_class'} id={v.title + '_class'}>\n          {v.applications.reduce((pv, v) => {\n            const card = <Card application={v} key={v.id} showEditModal={this.showEditModal.bind(this, v, 'update')} />\n            pv.push(card)\n            return pv\n          }, [])}\n          {/* add function not implement */}\n          <div className='card card-col'>\n            <div className='card-body new-col' onClick={this.showEditModal.bind(this, { class: v.class }, 'create')}>\n              <i className='fas fa-plus text-center' />\n            </div>\n          </div>\n        </div>\n      )\n      pv.push(appClass)\n      return pv\n    }, [])\n  }\n\n  // create the class title\n  createCardTitle (applicationsGroup) {\n    return applicationsGroup.reduce((pv, v) => {\n      const title = (\n        <div className='col' key={v.title + '_title'}>\n          <div className='card card-col'>\n            <div className='card-body noPadding'>\n              <div type='text' className='text-center title-col form-control-lg'>\n                {v.title}\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n      pv.push(title)\n      return pv\n    }, [])\n  }\n\n  // initialize the data, classify data according to their class\n  groupApplication (applications) {\n    const result = [\n      {\n        title: 'Wish list',\n        applications: [],\n        class: '1'\n      }, {\n        title: 'Waiting for referral',\n        applications: [],\n        class: '2'\n      }, {\n        title: 'Applied',\n        applications: [],\n        class: '3'\n      }, {\n        title: 'Rejected',\n        applications: [],\n        class: '4'\n      }\n    ]\n    applications?.forEach(app => {\n      const appClass = result.find(v => { return v.class === app.status })\n      appClass?.applications.push(app)\n    })\n    return result\n  }\n\n  render () {\n    let applicationModal = null\n    if (this.state.application) {\n      applicationModal = (\n        <CardModal\n          show={this.state.showModal}\n          submitFunc={this.updateCardBoard.bind(this)}\n          mode={this.state.modalMode}\n          application={this.state.application}\n          closeEditModal={this.closeEditModal.bind(this)}\n          deleteApplication={this.deleteApplication.bind(this)}\n        />\n      )\n    }\n    return (\n      <span id='tab'>\n        <div className='row'>\n          {this.state.card_titles}\n        </div>\n        <div className='row'>\n          {this.state.card_class}\n        </div>\n        {applicationModal}\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Modal } from 'react-bootstrap'\n\nexport default class SearchCard extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      handleCloseEditModal: props.handleCloseEditModal,\n      deleteApplication: props.deleteApplication,\n      submitFunc: props.submitFunc,\n      id: props.application.id,\n      jobTitle: props.application.jobTitle,\n      companyName: props.application.companyName,\n      date: props.application.date,\n      class: '1'\n    }\n  }\n\n  // set data to state automatically corresponding to the attribute 'id' of input field\n  // ex: <input id = 'date'> => setState({date: value})\n  handleChange (event) {\n    this.setState({ [event.target.id]: event.target.value })\n  }\n\n  submitAction () {\n    console.log('hit!')\n    this.state.handleCloseEditModal()\n    const application = {\n      id: this.state.id,\n      companyName: this.state.companyName,\n      jobTitle: this.state.jobTitle,\n      date: this.state.date,\n      status: this.state.class\n    }\n    console.log(application)\n    // call parent function to handle data change\n    this.state.submitFunc(application)\n  }\n\n  render () {\n    const functionBtn = (\n      <button type='button' className='btn btn-success' onClick={this.submitAction.bind(this)}>\n        Create\n      </button>\n    )\n    if (!this.props.application) {\n      return <div />\n    }\n\n    return (\n      <div>\n        <Modal show={this.props.show} onHide={this.state.handleCloseEditModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              Add New Job\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className='form-group'>\n              <label htmlFor='companyName' className='col-form-label'>Company Name</label>\n              <input\n                type='text' className='form-control' id='companyName' value={this.state.companyName}\n                onChange={this.handleChange.bind(this)}\n              />\n            </div>\n            <div className='form-group'>\n              <label htmlFor='job_title' className='col-form-label'>Job Title</label>\n              <input\n                type='text' className='form-control' id='jobTitle' value={this.state.jobTitle}\n                onChange={this.handleChange.bind(this)}\n              />\n            </div>\n            <div className='form-group'>\n              <label htmlFor='date' className='col-form-label'>Date</label>\n              <input\n                type='date' className='form-control' id='date' value={this.state.date}\n                onChange={this.handleChange.bind(this)}\n              />\n            </div>\n            <div className='input-group mb-3'>\n              <div className='input-group-prepend'>\n                <label className='input-group-text' htmlFor='class'>Application Type</label>\n              </div>\n              <select\n                className='custom-select' id='class' value={this.state.class}\n                onChange={this.handleChange.bind(this)}\n              >\n                <option>Choose...</option>\n                <option value='1'>Wish list</option>\n                <option value='2'>Waiting Referral</option>\n                <option value='3'>Applied</option>\n                <option value='4'>Rejected</option>\n              </select>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <button type='button' className='btn btn-secondary' onClick={this.state.handleCloseEditModal}>\n              Close\n            </button>\n            {functionBtn}\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport $ from 'jquery'\nimport SearchCard from './SearchCard'\n\nconst columns = [\n  {\n    label: 'Company Name',\n    id: 'companyName'\n  }, {\n    label: 'Job title',\n    id: 'jobTitle'\n  }, {\n    label: 'Date',\n    id: 'date'\n  }, {\n    label: '',\n    id: 'func'\n  }\n]\n\nexport default class SearchPage extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      searchText: '',\n      rows: [],\n      salary: '',\n      addedList: []\n    }\n  }\n\n  search () {\n    if (!this.state.searchText) {\n      window.alert('Search bar cannot be empty!!')\n      return\n    }\n    $.ajax({\n      url: 'http://localhost:5000/search',\n      method: 'get',\n      data: {\n        keywords: this.state.searchText,\n        salary: this.state.salary\n      },\n      contentType: 'application/json',\n      success: (data) => {\n        const res = data.map((d, i) => {\n          return {\n            id: i,\n            jobTitle: d.jobTitle,\n            companyName: d.companyName,\n            location: d.location\n          }\n        })\n        this.setState({\n          rows: res\n        })\n      }\n    })\n  }\n\n  deleteTheApplication (id) {\n    const newRows = this.state.rows.filter(app => {\n      return app.id !== id\n    })\n    const newAddedList = this.state.addedList.filter(app => {\n      return app.id !== id\n    })\n    this.setState({\n      rows: newRows,\n      addedList: newAddedList\n    })\n  }\n\n  // open the card modal according to the application in parameter\n  showEditModal (job, mode) {\n    this.setState({\n      showModal: true,\n      job: job,\n      modalMode: mode\n    })\n  }\n\n  handleCloseEditModal () {\n    this.setState({\n      showModal: false,\n      job: null\n    })\n  }\n\n  addToWaitlist (job) {\n    const newAddedList = this.state.addedList\n    newAddedList.push(job.id)\n    console.log(job)\n\n    $.ajax({\n      url: 'http://localhost:5000/application',\n      method: 'POST',\n      data: JSON.stringify({\n        application: job\n      }),\n      contentType: 'application/json',\n      success: (msg) => {\n        console.log(msg)\n      }\n    })\n    this.setState({\n      addedList: newAddedList\n    })\n  }\n\n  removeFromWaitlist (job) {\n    const newAddedList = this.state.addedList.filter(v => {\n      return v !== job.id\n    })\n    this.setState({\n      addedList: newAddedList\n    })\n  }\n\n  handleChange (event) {\n    this.setState({ [event.target.id]: event.target.value })\n  }\n\n  setSalary(event) {\n        this.setState({ [event.target.id]: event.target.value });\n  }\n\n  render () {\n    const rows = this.state.rows\n\n    let applicationModal = null\n    if (this.state.job) {\n      applicationModal = (\n        <SearchCard\n          show={this.state.showModal}\n          submitFunc={this.addToWaitlist.bind(this)}\n          mode={this.state.modalMode}\n          application={this.state.job}\n          handleCloseEditModal={this.handleCloseEditModal.bind(this)}\n          deleteApplication={this.deleteTheApplication.bind(this)}\n        />\n      )\n    }\n\n    return (\n      <div>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-5 input-group mb-3'>\n              <input type='text' id='searchText' className='form-control' placeholder='Keyword' aria-label='Username' aria-describedby='basic-addon1' value={this.state.searchText} onChange={this.handleChange.bind(this)} />\n            </div>\n            <div className=\"col-5 mb-3\" style={{padding: 0.4 + 'em'}}>\n                <label>Salary Range Per Annum :  </label>\n                <select name=\"salary\" id=\"salary\" onChange={this.setSalary.bind(this)} value={this.state.salary} >\n                <option value=\"\">Please select salary range</option>\n                <option value=\"$50K\">$0K - $50K</option>\n                <option value=\"$75K\">$51K - $100K</option>\n                <option value=\"$125K\">$101K - $150K</option>\n                <option value=\"$175K\">$151K - $200K</option>\n                </select>\n            </div>\n            <div>\n              <button type='button' className='btn btn-secondary' onClick={this.search.bind(this)}>Search</button>\n            </div>\n          </div>\n        </div>\n        <table className='table'>\n          <thead>\n            <tr>\n              {columns.map(column => {\n                return <th key={column.id + '_th'}>{column.label}</th>\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map(row => {\n              return (\n                <tr key={row.id}>\n                  {columns.map(column => {\n                    const value = row[column.id]\n                    if (column.id !== 'func') {\n                      return <td key={column.id}>{value}</td>\n                    } else {\n                      const addButton = this.state.addedList.includes(row.id)\n                        ? <button type='button' className='btn btn-outline-secondary' onClick={this.removeFromWaitlist.bind(this, row)}> Added </button>\n                        : <button type='button' className='btn btn-secondary' onClick={this.showEditModal.bind(this, row)}> Add </button>\n                      return (\n                        <td key={row.id + '_func'}>\n                          <div className='container'>\n                            <div className='row'>\n                              <div className='col-md-4'>\n                                {addButton}\n                              </div>\n                                                    &nbsp;&nbsp;\n                              <div className='col-md-2'>\n                                <button type='button' style={{ backgroundColor: 'red' }} className='btn btn-secondary' onClick={this.deleteTheApplication.bind(this, row.id)}> Delete </button>\n                              </div>\n                            </div>\n                          </div>\n\n                        </td>\n                      )\n                    }\n                  })}\n\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n\n        {applicationModal}\n      </div>\n    )\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport './static/App.css';\n\nimport React from 'react';\nimport Sidebar from './sidebar/Sidebar'\nimport ApplicationPage from './application/ApplicationPage'\nimport SearchPage from './search/SearchPage'\n\n\nexport default class App extends React.Component {\n  constructor(props){\n    super(props)\n    let mapRouter = {\n      'SearchPage': <SearchPage/>,\n      'ApplicationPage' : <ApplicationPage/>\n    }\n    this.state ={\n      currentPage: <ApplicationPage/>,\n      mapRouter: mapRouter\n    }\n  };\n\n  switchPage(pageName){\n    this.setState({\n      currentPage: this.state.mapRouter[pageName]\n    })\n  }\n\n  render() {\n    let app = (<div className=\"main-page\">\n      <Sidebar switchPage={this.switchPage.bind(this)}/>\n      <div className=\"main\">\n        <div className=\"content\">\n          <h1 className=\"text-center\" style={{padding: 0.4 + 'em'}}>My applications</h1>\n          <div className=\"\">\n            {/* <span className=\"btn-icon \">\n              <button className=\"btn btn-danger btn-icon\"><i className=\"fas fa-plus\"></i>&nbsp;New</button>\n            </span> */}\n          </div>\n          {this.state.currentPage}\n        </div>\n      </div>\n    </div>\n    )\n    return app;\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './static/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}